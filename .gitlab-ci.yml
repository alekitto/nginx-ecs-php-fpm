build:
    image:
        name: alekitto/docker:latest
        entrypoint: [ '/bin/bash' ]
    before_script:
        - |
            VERSION=noop
            if [ "$CI_PIPELINE_SOURCE" = "schedule" ]; then
              VERSION=nightly
            elif [[ "$CI_COMMIT_TAG" != "" ]]; then
              VERSION=$CI_COMMIT_TAG
            elif [[ "$CI_MERGE_REQUEST_IID" != "" ]]; then
              VERSION=mr-$CI_MERGE_REQUEST_IID
            else
              VERSION=$CI_COMMIT_REF_SLUG
              if [ "$CI_COMMIT_BRANCH" = "$CI_DEFAULT_BRANCH" ]; then
                VERSION=edge
              fi
            fi
            TAGS="$CI_REGISTRY_IMAGE:$VERSION"
            if [ $(expr match "$VERSION" '[0-9]\+\.[0-9]\+\.[0-9]\+') -ne 0 ]; then
              MINOR=${VERSION%.*}
              MAJOR=${MINOR%.*}
              TAGS="$TAGS ${CI_REGISTRY_IMAGE}:${MINOR} ${CI_REGISTRY_IMAGE}:${MAJOR} ${CI_REGISTRY_IMAGE}:latest"
            elif [ "$CI_PIPELINE_SOURCE" = "push" ]; then
              TAGS="$TAGS ${CI_REGISTRY_IMAGE}:git-${CI_COMMIT_SHORT_SHA}"
            fi
            export TAGS

        - docker buildx create --use --driver kubernetes --driver-opt rootless=false --driver-opt qemu.install=true --bootstrap
        - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY

    script:
        - |
            for TAG in $TAGS; do
                tag_opts+=( --tag="$TAG" )
            done
            export tag_opts

        - docker buildx build
            --cache-from="type=registry,ref=$CI_REGISTRY_IMAGE:cache"
            --cache-to="type=registry,ref=$CI_REGISTRY_IMAGE:cache,mode=max"
            --pull "${tag_opts[@]}" --push .
            --platform linux/amd64,linux/arm64

    after_script:
        - docker buildx rm

    only:
        - main
        - tags
